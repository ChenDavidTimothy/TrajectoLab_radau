[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "trajectolab"
version = "0.1.0"
description = "Optimal control framework using Radau Pseudospectral Method"
authors = [{name = "TrajectoLab Authors"}]
readme = "README.md"
requires-python = ">=3.6"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Mathematics",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
keywords = ["optimal control", "trajectory optimization", "collocation", "pseudospectral methods"]
dependencies = [
    "numpy>=1.18.0",
    "matplotlib>=3.1.0",
    "scipy>=1.4.0",
    "casadi>=3.5.0",
    "pandas>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "black>=23.3.0",
    "isort>=5.12.0",
    "ruff>=0.0.263",
    "mypy>=1.3.0",
    "pre-commit>=3.3.1",
]

[tool.black]
line-length = 100
target-version = ["py39", "py310", "py311", "py312"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.venv
  | venv
  | __pycache__
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
skip = [".venv", "venv", "__pycache__", "build", "dist"]
skip_gitignore = true
multi_line_output = 3

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
exclude = [".venv", "venv", "build", "dist"]
ignore_missing_imports = true
follow_imports = "silent"

[tool.ruff]
line-length = 100
target-version = "py39"
select = [
    "E",  # pycodestyle errors
    "F",  # pyflakes errors
    "B",  # flake8-bugbear rules
    "I",  # isort rules
    "W",  # pycodestyle warnings
    "C",  # flake8-comprehensions
    "N",  # pep8-naming
]
ignore = [
    "E203",  # Whitespace before ':' (conflicts with black)
    "E501",  # Line too long (handled by black)
    "C901",
    "N803",
    "N806",
    "N815"
]
exclude = [
    ".venv",
    "venv",
    "__pycache__",
    "build",
    "dist",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Unused imports in __init__.py

[tool.ruff.pydocstyle]
convention = "google"

[tool.pylint]
max-line-length = 100
disable = [
    "raw-checker-failed",
    "bad-inline-option",
    "locally-disabled",
    "file-ignored",
    "suppressed-message",
    "useless-suppression",
    "deprecated-pragma",
    "use-symbolic-message-instead",
    "C0303", "C0330", "C0326", "W0311",
    "missing-function-docstring",
    "missing-module-docstring",
    "missing-class-docstring",
    "too-many-arguments",
    "too-many-locals",
    "too-many-instance-attributes",
]
good-names = ["i", "j", "k", "ex", "Run", "_", "id", "x", "y", "z", "t", "df", "ax", "f"]
ignore = ["CVS", ".venv", "venv"]
ignore-patterns = [".*\\.venv.*"]
